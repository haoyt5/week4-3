{"version":3,"sources":["NewComponent.js","App.js","serviceWorker.js","index.js"],"names":["NewComponent","react_default","a","createElement","id","className","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isToggleOn","handleClick","bind","assertThisInitialized","showComponent","_onButtonClick","setState","prevState","href","onClick","src_NewComponent","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d4fb58ac.chunk.js","sourcesContent":["import React from 'react';\n\nconst NewComponent = () =>(\n    <div id=\"show-box\">\n    <div className=\"row\">\n      <div className=\"col-1-2\">\n        <div className=\"contentbox  bg-color-deep-blue u-text-center u-margin-16 u-padding-bt-120 u-padding-tp-8 \">Content Box 5</div>\n      </div>\n      <div className=\"col-1-2\">\n        <div className=\"contentbox  bg-color-deep-blue u-text-center u-margin-16 u-padding-bt-120 u-padding-tp-8 \">Content Box 6</div>\n      </div>\n    </div>\n\n    <div className=\"row\">\n      <div className=\"col-1-2\">\n        <div className=\"contentbox  bg-color-deep-blue u-text-center u-margin-16 u-padding-bt-120 u-padding-tp-8 \">Content Box 7</div>\n    </div>\n    <div className=\"col-1-2\">\n        <div className=\"contentbox  bg-color-deep-blue u-text-center u-margin-16 u-padding-bt-120 u-padding-tp-8 \">Content Box 8</div>\n      </div>\n    </div>\n  </div>\n\n);\nexport default NewComponent;","import React, { Component } from 'react';\nimport './reset.css';\nimport './App.css';\nimport NewComponent from './NewComponent';\n// import ChangeText from './ChangeText';\n// import {Jumbotron} from 'react-bootstrap';\n// import SearchForm from './components/SearchForm';\n// import Results from './components/Results';\nconst Child = () => (\n  <div className='modal'>\n        Hello, World!\n    </div>\n  )\n\nclass App extends Component {\n\n\n\n\n  constructor(props) {\n    super(props);\n    this.state = {isToggleOn: true};\n    \n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      showComponent: false,\n    };\n    this._onButtonClick = this._onButtonClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn\n    }));\n  }\n  _onButtonClick() {\n    this.setState({\n      showComponent: true,\n    });\n  }\n\n\n  render() {\n    return (\n      // <div>\n      //   <Jumbotron>\n      //     <h1>Search App<h1/>\n      //     <p>This is a simple search app.<p/>\n      //     <SearchForm/>\n\n      //   <Jumbotron/>\n      //   <Results/>\n      // <div/>\n<div className=\"wrapper\">\n  {/* Start Header */}\n  <header className=\"navbarwrapper bg-color-light-grey\">\n    <div className=\"container\">\n      <div className=\"navbar u-clearfix\">\n        <div className=\"logo navbar__logo\">\n          <div className=\"logo__title\">Website Title</div>\n          <a className=\"logo__image u-shadow-minor\" />\n        </div>\n        <div className=\"nav navbar__nav\">\n          <a href=\"#popup-menu\" className=\"menu-toggle\">\n            <span />\n            <span />\n            <span />\n          </a>\n          <ul id=\"popup-menu\" className=\"menu menu--horizontal u-clearfix responsive-popup\">\n            <a href=\"#!\" className=\"popup-menu__close\">\n              <span />\n              <span />\n            </a>              \n            <li><a className=\"menu__item\" href=\"#\">Item 1</a></li>\n            <li><a className=\"menu__item\" href=\"#\">Item 2</a></li>\n            <li><a className=\"menu__item\" href=\"#\">Item 3</a></li>\n            <li><a className=\"menu__item\" href=\"#\">Item 4</a></li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </header>\n  {/* End Header */}\n  {/* Start Section */}\n  <section className=\"main\">\n    {/* Start Welcome Message */}\n    <div className=\"welcome givePadding bg-color-blue\">\n\n      <div className=\"container\">\n        <h1 id=\"welcome-text-change\" onClick={this.handleClick} className=\"u-text-center welcome-text u-pointer\">{this.state.isToggleOn ? 'Welcome Message' : 'Have A Goog Time'}</h1>\n      </div>\n    </div>\n    {/* End Welcome Message */}\n    {/* Start Section */}\n    <div className=\"section\">\n      <div className=\"container\">\n        <h2 className=\"u-text-center titlePadding\">Section Title</h2>\n        <div className=\"row\">\n          <div className=\"col-1-2\">\n            <div className=\"contentbox u-shadow bg-color-deep-blue u-text-center u-margin-16 u-padding-bt-120 u-padding-tp-8 \">Content Box 1</div>\n          </div>\n          <div className=\"col-1-2\">\n            <div className=\"contentbox u-shadow bg-color-deep-blue u-text-center u-margin-16 u-padding-bt-120 u-padding-tp-8 \">Content Box 2</div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-1-2\">\n            <div className=\"contentbox u-shadow bg-color-deep-blue u-text-center u-margin-16 u-padding-bt-120 u-padding-tp-8 \">Content Box 3</div>\n          </div>\n          <div className=\"col-1-2\">\n            <div className=\"contentbox u-shadow bg-color-deep-blue u-text-center u-margin-16 u-padding-bt-120 u-padding-tp-8 \">Content Box 4</div>\n          </div>\n        </div>\n      </div>\n    </div>\n    {/* End Section*/}\n    {/* Start CallButton */}\n    <div className=\"callbutton\">\n      <div className=\"container\">\n        <div className=\"u-text-center  titlePadding\">\n          <button onClick={this._onButtonClick} id=\"btn-show\" className=\"btn btn--lg u-shadow-minor\">Call to Action</button>\n        </div>\n        {this.state.showComponent ?\n           <NewComponent /> :\n           null\n        }\n\n\n\n { \n        //  <div id=\"show-box\">\n        //   <div className=\"row\">\n        //     <div className=\"col-1-2\">\n        //       <div className=\"contentbox  bg-color-deep-blue u-text-center u-margin-16 u-padding-bt-120 u-padding-tp-8 \">Content Box 5</div>\n        //     </div>\n        //     <div className=\"col-1-2\">\n        //       <div className=\"contentbox  bg-color-deep-blue u-text-center u-margin-16 u-padding-bt-120 u-padding-tp-8 \">Content Box 6</div>\n        //     </div>\n        //   </div>\n\n        //   <div className=\"row\">\n        //     <div className=\"col-1-2\">\n        //       <div className=\"contentbox  bg-color-deep-blue u-text-center u-margin-16 u-padding-bt-120 u-padding-tp-8 \">Content Box 7</div>\n        //   </div>\n        //   <div className=\"col-1-2\">\n        //       <div className=\"contentbox  bg-color-deep-blue u-text-center u-margin-16 u-padding-bt-120 u-padding-tp-8 \">Content Box 8</div>\n        //     </div>\n        //   </div>\n        // </div>\n }\n      </div>\n    </div>\n    {/* End Button */}\n  </section>\n  {/* End Section */}\n  {/* Start Footer */}\n  <footer className=\"footer\">\n  </footer>\n  {/* End Footer */}\n</div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'bootstrap/dist/css/bootstrap.css'; \nimport './index.css'; //after the bootstrap.css index.css won't be overwriden by bootstrap \nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}